<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djt.cbs.system.dao.SysRoleDao">
	<resultMap id="SysRoleResult" type="com.djt.cbs.system.entity.SysRole">
		<result property="roleId" column="role_id" />
		<result property="roleName" column="role_name" />
		<result property="status" column="status" />
		<result property="remark" column="remark" />
		<result property="createUser" column="create_user" />
		<result property="createTime" column="create_time" />
		<result property="updateUser" column="update_user" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	<select id="find" resultMap="SysRoleResult">
		select `role_id`,`role_name`,`status`,`remark`,`create_user`,`create_time`,`update_user`,`update_time`
		from `sys_role`
		<where>
			<if test="name != null">and `role_name` like #{name}</if>
			<if test="status != null ">and `status`=#{status}</if>
		</where>
		order by role_name
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	<select id="findCount" resultType="Integer">
		select count(1)
		from `sys_role`
		<where>
			<if test="name != null">and `role_name` like #{name}</if>
			<if test="status != null ">and `status`=#{status}</if>
		</where>
	</select>
	<select id="findUserRoleAssigned" resultMap="SysRoleResult">
		select distinct r.`role_id`,r.`role_name`, r.`status`
		from `sys_role` r
		inner join sys_user_role ur on r.role_id=ur.role_id
		where ur.user_id=#{userId} and ur.start_time &lt;= current_timestamp and ur.end_time &gt;= current_timestamp
		order by role_name
	</select>
	<select id="findUserRoleUnAssigned" resultMap="SysRoleResult">
		select `role_id`,`role_name`
		from `sys_role`
		where role_id not in (
				select role_id from sys_user_role where user_id=#{userId} 
					and start_time &lt;= current_timestamp and end_time &gt;= current_timestamp
			)
			and `status`=1
		order by role_name;
	</select>
	<select id="get" parameterType="Integer" resultMap="SysRoleResult">
		select
		`role_id`,`role_name`,`status`,`remark`,`create_user`,`create_time`,`update_user`,`update_time`
		from `sys_role`
		where `role_id` = #{roleId}
	</select>
	<insert id="create" parameterType="com.djt.cbs.system.entity.SysRole">
		insert into
		`sys_role`(`role_name`,`status`,`remark`,`create_user`,`create_time`,`update_user`)
		values(#{roleName},#{status},#{remark},#{createUser},#{createTime},#{updateUser})
		<selectKey keyProperty="roleId" resultType="java.lang.Integer" order="AFTER" statementType="STATEMENT">
			select last_insert_id()
		</selectKey>
	</insert>
	<update id="update" parameterType="com.djt.cbs.system.entity.SysRole">
		update `sys_role` set
		`role_name`=#{roleName},`status`=#{status},`remark`=#{remark},`update_user`=#{updateUser}
		where `role_id` = #{roleId}
	</update>
	<insert id="assignUserRoles">
		insert into sys_user_role(user_id,role_id,start_time,end_time,update_user) values
		<if test="roleIds!=null">
			<foreach item="roleId" index="index" collection="roleIds" open="" close="" separator=",">
				(#{userId},#{roleId},current_timestamp,'9999-12-31',#{updateUser})
			</foreach>
		</if>
	</insert>
	<update id="unassignUserRole">
		update `sys_user_role` set end_time = current_timestamp - INTERVAL 1 SECOND, update_user = #{updateUser}
		where user_id=#{userId} and role_id=#{roleId}
			and start_time &lt;= current_timestamp and end_time &gt;= current_timestamp
	</update>
</mapper>