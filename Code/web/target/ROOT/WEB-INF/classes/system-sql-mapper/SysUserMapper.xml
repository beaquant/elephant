<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djt.cbs.system.dao.SysUserDao">
	<resultMap id="sysUserResult" type="com.djt.cbs.system.entity.SysUser">
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="status" column="status" />
		<result property="loginId" column="login_id" />
		<result property="password" column="password" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="mobile" column="mobile" />
		<result property="createUser" column="create_user" />
		<result property="createTime" column="create_time" />
		<result property="updateUser" column="update_user" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	<resultMap id="sysUserRoleResult" type="com.djt.cbs.system.entity.SysUserRole">
		<result property="userRoleId" column="user_role_id" />
		<result property="userId" column="user_id" />
		<result property="roleId" column="role_id" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="updateUser" column="update_user" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<!-- 取用户所属的角色ID列表 -->
	<select id="findUserRoleIds"  resultType="Integer">
		select distinct ur.`role_id`
		from `sys_user_role` ur
		inner join sys_role r on r.role_id=ur.role_id
		where ur.user_id=#{userId} and r.status=1
			and ur.start_time &lt;= current_timestamp and ur.end_time &gt;= current_timestamp
	</select>
	
	<!-- 查询用户 -->
	<select id="find"  resultMap="sysUserResult">
		select `user_id`,`user_name`,`status`,`login_id`,`password`,`email`,`phone`,`mobile`,`create_user`,`create_time`,`update_user`,`update_time`
		from `sys_user`
		<where>
			<if test="name != null">and `user_name` like #{name}</if>
			<if test="loginId != null">and `login_id` like #{loginId}</if>
			<if test="status != null ">and `status`=#{status}</if>
		</where>
		order by `login_id` asc
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	<!-- 查用户总记录数 -->
	<select id="findCount" resultType="Integer">
		select count(*) from `sys_user`
		<where>
			<if test="name != null">and `user_name` like #{name}</if>
			<if test="loginId != null">and `login_id` like #{loginId}</if>
			<if test="status != null ">and `status`=#{status}</if>
		</where>
	</select>
	<select id="getByLoginId" parameterType="String" resultMap="sysUserResult">
		select `user_id`,`user_name`,`status`,`login_id`,`password`,`email`,`phone`,`mobile`,`create_user`,`create_time`,`update_user`,`update_time`
		from `sys_user`
		where `login_id` = #{loginId}
	</select>
	<select id="get" parameterType="Integer" resultMap="sysUserResult">
		select `user_id`,`user_name`,`status`,`login_id`,`password`,`email`,`phone`,`mobile`,`create_user`,`create_time`,`update_user`,`update_time`
		from `sys_user`
		where `user_id` = #{userId}
	</select>
	<update id="update" parameterType="com.djt.cbs.system.entity.SysUser">
		update `sys_user` set `login_id`=#{loginId}
			<if test="password != null">
				, `password`=#{password}
			</if>
			, `user_name`=#{userName}, `status`=#{status},`email`=#{email}, `phone`=#{phone}, `mobile`=#{mobile}
			, `update_user`=#{updateUser}
		where `user_id` = #{userId}
	</update>
	<insert id="create" parameterType="com.djt.cbs.system.entity.SysUser">
		insert into `sys_user`(`user_name`,`status`,`login_id`,`password`,`email`,`phone`,`mobile`,`create_user`,`create_time`,`update_user`)
		values(#{userName},#{status},#{loginId},#{password},#{email},#{phone},#{mobile},#{createUser},#{createTime},#{updateUser})
		<selectKey keyProperty="userId" resultType="java.lang.Integer" order="AFTER" statementType="STATEMENT">
			select last_insert_id()
		</selectKey>
	</insert>
	<update id="updatePasswordByUserId">
		update `sys_user` 
		set    `password`=#{password}
		where `user_id` = #{userId}
	</update>
</mapper>